service: rest-nodejs
provider:
  name: aws
  runtime: nodejs4.3
  region: us-west-2
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
functions:
  hello:
    handler: handler.hello
    events:
     - http:
         path: /
         method: get
  getUser:
    handler: handler.getUser
    events:
     - http:
         path: /getUser
         method: get
  createUser:
    handler: handler.createUser
    events:
     - http:
         path: /createUser
         method: post
  deleteUser:
    handler: handler.deleteUser
    events:
     - http:
         path: /deleteUser
         method: delete
         resources:
Resources:
  TodosDynamoDbTable:
    Type: 'AWS::DynamoDB::Table'
    DeletionPolicy: Retain
    Properties:
      AttributeDefinitions:
        -
          AttributeName: id
          AttributeType: S
      KeySchema:
        -
          AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: ${self:provider.environment.DYNAMODB_TABLE}
